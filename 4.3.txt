// exercise-4-3.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include<iostream>
#include<fstream>
#include<iomanip>
#include<string>

using namespace std;

bool read_array (double** &A, int & rows, int & cols, string filename);

void multiply (double ** & A, double ** & B, double ** & C, int rows_a, int cols_b, int cols_a, int rows_b);

void display_matrix (int m, int n, double** & A);

int _tmain(int argc, _TCHAR* argv[])
{
	int rows_a, cols_a;
	int rows_b, cols_b;
	double** A, ** B, **C;
	string filename;
	
	cout<<"Filename A: ";
	cin>>filename;

	read_array (A, rows_a, cols_a, filename);

	cout<<"Filename B: ";
	cin>>filename;

	read_array (B, rows_b, cols_b, filename);

	multiply(A, B, C, rows_a, cols_b, cols_a, rows_b);

	cout<<"The product AB is: "<<endl;

	display_matrix (rows_a, cols_b, C);

	system("pause");
	return 0;
}

bool read_array (double** &A, int & rows, int & cols, string filename)
{	
	ifstream in;
	int i,j;
	in.open(filename);

	if (in.fail()) 
		return false;

	in >> rows;
	in >> cols;

	A = new double* [rows];
	for (i = 0; i < rows; i++)
	{
		A[i] = new double[cols];
		for (j = 0; j < cols; j++) 
			in >> A[i][j];
	}
	in.close();
	return true;
}

void display_matrix (int m, int n, double** & A)
{
	for (int i = 0; i<m; i++) //rows
	{
		for (int j=0; j<n; j++)
				cout<< setw(6) << A[i][j];
		cout<<endl;
	}
}

void multiply (double ** & A, double ** & B, double ** & C, int rows_a, int cols_b, int cols_a, int rows_b)
{
	if (cols_a != rows_b)
	{
		cout<<"You can't multiply these matrices - wrong dimensions!"<<endl;
	}

	else
	{
		C = new double*[rows_a];
		for (int i=0; i<rows_a; i++)
		{
			C[i] = new double[cols_b];

			for (int j=0; j<cols_b; j++)
			{
				C[i][j]=0;
				for (int k=0; k<cols_a; k++)
					C[i][j] += A[i][k] * B[k][j];
			}
		}
	}
}
